name: GraphRAG CI  
trigger:  
  branches:  
    include:  
      - main  
  
pr:  
  branches:  
    include:  
      - main  
  
variables:
  POETRY_VERSION: "1.8.3"  
  DEBUG: 1  
  GRAPHRAG_LLM_TYPE: "azure_openai_chat"  
  GRAPHRAG_EMBEDDING_TYPE: "azure_openai_embedding"  
  GRAPHRAG_CACHE_TYPE: "blob"  
  GRAPHRAG_CACHE_CONNECTION_STRING: $(BLOB_STORAGE_CONNECTION_STRING)  
  AZURE_AI_SEARCH_URL_ENDPOINT: $(AZURE_AI_SEARCH_URL_ENDPOINT)  
  AZURE_AI_SEARCH_API_KEY: $(AZURE_AI_SEARCH_API_KEY)  
  GRAPHRAG_CACHE_CONTAINER_NAME: "cicache"  
  GRAPHRAG_CACHE_BASE_DIR: "cache"  
  GRAPHRAG_LLM_MODEL: gpt-3.5-turbo-16k  
  GRAPHRAG_EMBEDDING_MODEL: text-embedding-ada-002  
  BLOB_STORAGE_URL: $(GRAPHRAG_CACHE_URL)
  GRAPHRAG_LLM_TPM: 45000 # 180,000 / 4  
  GRAPHRAG_LLM_RPM: 270 # 1,080 / 4  
  GRAPHRAG_EMBEDDING_TPM: 87500 # 350,000 / 4  
  GRAPHRAG_EMBEDDING_RPM: 525 # 2,100 / 4  
  GRAPHRAG_CHUNK_SIZE: 1200  
  GRAPHRAG_CHUNK_OVERLAP: 0  
  
stages:  
  - stage: Compliance  
    dependsOn: []  
    jobs:  
      - job: compliance  
        displayName: Compliance  
        pool:  
          vmImage: windows-latest  
        steps:  
          - task: CredScan@3  
            inputs:  
              outputFormat: sarif  
              debugMode: false  
          - task: ComponentGovernanceComponentDetection@0  
            inputs:  
              scanType: "Register"  
              verbosity: "Verbose"  
              alertWarningLevel: "High"  
          - task: PublishSecurityAnalysisLogs@3  
            inputs:  
              ArtifactName: "CodeAnalysisLogs"  
              ArtifactType: "Container"  

  - stage: AzureTests 
    dependsOn: []
    jobs:
    - job: smoke_tests  
      strategy:  
        matrix:  
          # Windows310:
          #   pythonVersion: "3.10"
          #   os: "windows-latest"
          # Ubuntu310:
          #   pythonVersion: "3.10"
          #   os: "ubuntu-latest"
          # Windows311:
          #   pythonVersion: "3.11"
          #   os: "windows-latest"
          # Ubuntu311:
          #   pythonVersion: "3.11"
          #   os: "ubuntu-latest"
          # Windows312:
          #   pythonVersion: "3.12"
          #   os: "windows-latest"
          Ubuntu312:
            pythonVersion: "3.12"
            os: "ubuntu-latest"

      pool:  
        vmImage: $(os)
      steps:  
        - task: UsePythonVersion@0  
          inputs:  
            versionSpec: $(pythonVersion)
            addToPath: true  
    
        - script: pip install poetry==$(POETRY_VERSION)  
          displayName: 'Install Poetry'  

        - script: poetry self add setuptools && poetry run python -m pip install gensim && poetry install
          displayName: 'Install dependencies'  
    
        - script: poetry build  
          displayName: 'Build'  
    
        - task: UsePythonVersion@0  
          displayName: 'Install Azurite'  
          inputs:  
            versionSpec: '3.x'  
            addToPath: true  
    
        - task: AzureCLI@2  
          condition: succeeded()  
          inputs:  
            azureSubscription: $(AZURE_SERVICE_CONNECTION_NAME)  
            scriptType: bash  
            scriptLocation: inlineScript  
            inlineScript: |
              poetry run poe test_smoke   
    
        - task: PublishPipelineArtifact@1  
          displayName: 'Upload Smoke Test Artifacts'  
          condition: always()  
          inputs:  
            targetPath: 'tests/fixtures/*/output'  
            artifact: 'smoke-test-artifacts-$(pythonVersion)-$(POETRY_VERSION)-$(os)'  
            artifactType: 'container'  